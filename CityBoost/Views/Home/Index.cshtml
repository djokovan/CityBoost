@model CityBoost.ViewModels.SearchVM
@{
    ViewBag.Title = "CityBoost";
}

<div class="row">
    <div class="col-lg-12">
        <section id="search">
            <hr />
            <div class="container-fluid">
                <div class="row">
                    <div class="col-md-5">
                        <div class="form-group">
                            <div class="col-md-6">
                                @Html.Label("Continent", new { @class = "control-label" })
                                @Html.DropDownListFor(m => m.ContinentId, Model.Continents as IEnumerable<SelectListItem>, "Select a continent", new { @class = "form-control" })
                            </div>
                        </div>
                    </div>
                    <div class="col-md-5">
                        <div class="form-group">
                            <div class="col-md-6">
                                @Html.Label("Country", new { @class = "control-label" })
                                @Html.DropDownListFor(x => x.CountryId,
                                                           new SelectList(new List<SelectListItem>(){ new SelectListItem() { Selected = true, Text = "", Value = "choose_country"}}, "Value", "Text"),
                                                           new { @class = "form-control", disabled = true })
                            </div>
                        </div>
                    </div>
                    <div class="col-md-2">
                        <div class="form-group">
                            <div class="col-md-12">
                                <button id="btnSearch" type="submit" class="btn btn-primary call-list-search"><i class="glyphicon glyphicon-search"></i> Search</button>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="row">
                    <div class="container">
                        <br />
                        <div style="margin:0 auto;">
                            <table id="CitiesTable" class="table table-striped table-bordered dt-responsive" style="width: 100%" cellspacing="0">
                                <thead>
                                    <tr>
                                        <th>Details</th>
                                        <th></th>
                                        <th></th>
                                        <th></th>
                                        <th></th>
                                    </tr>
                                </thead>
                            </table>
                        </div>
                    </div>
                </div>
            </div>
        </section>
    </div>
</div>

@section Scripts{

    @Scripts.Render("~/bundles/jqueryval")

    <script type="text/javascript">
        $(document).ready(function () {
            $("#ContinentId").change(function (e) {
                $("#CountryId").empty();
                debugger;
                if ($('#ContinentId :selected').text() == 'Select a continent') {
                    $("#CountryId").attr('disabled', 'disabled');
                    return;
                };

                 $.ajax({
                    type: 'POST',
                    url: '@Url.Action("GetContinentCountries")',
                    dataType: 'json',
                    data: { continentId: $("#ContinentId").val() },
                    success: function (countries) {
                        $.each(countries, function (i, country) {
                            $("#CountryId").removeAttr('disabled');
                            $("#CountryId").append('<option value="' + country.Value + '">' + country.Text + '</option>');
                        });
                    },
                    error: function (ex) {
                        alert('Failed to retrieve countries.' + ex);
                    }
                });
                return false;
            });
        });

        var citiesTable = $("#CitiesTable").DataTable({
            data: [],
            processing: true,
            serverSide: true,
            filter: true,
            orderMulti: true,
            pageLength: 10,
            bPaginate: true,
            bLengthChange: true,
            bInfo: true,
            bAutoWidth: false,
            language: {
                sProcessing: "Processing...",
                emptyTable: "Nothing to show.",
                sLengthMenu: "Show _MENU_ elements",
                sZeroRecords: "No results",
                sInfo: "Showing _START_ to _END_ from _TOTAL_ elements",
                sInfoEmpty: "Total 0 elements",
                sInfoFiltered: "(filtered of total _MAX_ elements)",
                sInfoPostFix: "",
                sSearch: "Search:",
                sUrl: "",
                oPaginate: {
                    sFirst: "First",
                    sPrevious: "Previous",
                    sNext: "Next",
                    sLast: "Last"
                }
            },
            deferLoading: 0,
            ajax: {
                url: '@Url.Action("SearchCities", "Home")',
                type: "GET",
                datatype: 'json',
                data: function (data) {
                    data.country = $('#CountryId').find(":selected").text();
                }
            },
            columnDefs: [
                {
                    targets: 0,
                    className: 'details-control text-center',
                    orderable: false,
                    defaultContent: '',
                    render: function () {
                        return '<i class="glyphicon glyphicon-chevron-down" aria-hidden="true"></i>';
                    },
                },
                { targets: "_all", className: 'details-control text-center' }
            ],
            columns: [
                { data: null, autowidth:false, orderable:false, width: "10px" },
                { data: "Name", name: "Name", title: "Name", autowidth: true, },
                { data: "Population", name: "Population", title: "Population", autowidth: true },
                { data: "Latitude", name: "Latitude", title: "Latitude", autowidth: false, orderable: false, width: "5%" },
                { data: "Longitude", name: "Longitude", title: "Longitude", autowidth: false, orderable: false, width: "5%" }
            ],
            order: [[1, 'asc']]
        });

        $('#btnSearch').click(function (e) {

            citiesTable.ajax.reload();

        });

        $('#CitiesTable tbody').on('click', 'td.details-control', function () {
            debugger;

            var tr = $(this).closest('tr');
            var tdi = tr.find('td > i');
            var row = citiesTable.row(tr);

            if (row.child.isShown()) {
                // close row
                row.child.hide();
                tr.removeClass('shown');
                tdi.first().removeClass('glyphicon glyphicon-chevron-up');
                tdi.first().addClass('glyphicon glyphicon-chevron-down');
            }
            else {
                // open row
                row.child(format(row.data())).show();
                tr.addClass('shown');
                tdi.first().removeClass('glyphicon glyphicon-chevron-down');
                tdi.first().addClass('glyphicon glyphicon-chevron-up');
            }
        });

        function format(rowData) {
            // `rowData` is the original data object for the row
            console.log(rowData);

            if (rowData.Details != null && rowData.Details.length > 0) {

                var r = '<div id="detailsTable">';
                r = r + '<div id="detailsTable-scroll">';
                r = r + '<table class="table">';
                r = r + '<tr>';

                for (var i = 0; i < rowData.Details.length; i++) {

                    var UAId = rowData.Details[i].UAId;
                    var UALabel = rowData.Details[i].UALabel;
                    var UAData = rowData.Details[i].UAData;

                    r = r + '<td align="center" colspan="2" id="' + UAId + '"><b>' + UALabel + '</b>';
                    debugger;
                    for (var j = 0; j < UAData.length; j++) {
                        r = r + '<tr>';
                        r = r + '<td align="center">' + UAData[j].DataLabel + '</td>';
                        r = r + '<td align="center">' + UAData[j].DataValue + '</td>';
                        r = r + '</tr>';
                    }
                    r = r + '</td>';
                }
                r = r + '</tr>';

                r = r + '</table>';
                r = r + '</div>';
                r = r + '</div>';

                return r;
            }
            else {

                var r = '<tr>';
                r = r + '<td align="center" colspan="2"><b>Sorry, Teleport API provided no data for this city.</b></td>';
                r = r + '</tr>';

                return r;
            }
        }
    </script>
}
